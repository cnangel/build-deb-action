name: Testing

on:
  pull_request:
  push:
    paths-ignore: [LICENSE, README.md]

jobs:
  apt-opts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          apt_opts: --install-recommends --no-install-suggests
          buildpackage_opts: --build=binary --no-sign
          source_dir: test
      - run: |
          dpkg --info debian/artifacts/test_1_amd64.deb
          dpkg --contents debian/artifacts/test_1_amd64.deb | grep ./usr/bin/mybin
          test -f debian/artifacts/test_1_amd64.buildinfo
          test -f debian/artifacts/test_1_amd64.changes

  before-build-hook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          before_build_hook: |
            cd test
            dch --maintmaint --newversion 2 "Version 2"
            dch --maintmaint --release ""
          buildpackage_opts: --build=binary --no-sign
          extra_build_deps: devscripts
          source_dir: test
      - run: |
          dpkg --info debian/artifacts/test_2_amd64.deb
          dpkg --contents debian/artifacts/test_2_amd64.deb | grep ./usr/bin/mybin
          test -f debian/artifacts/test_2_amd64.buildinfo
          test -f debian/artifacts/test_2_amd64.changes

  default-source_dir:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cp -r test/* .
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          buildpackage_opts: --build=binary --no-sign
      - run: |
          dpkg --info debian/artifacts/test_1_amd64.deb
          dpkg --contents debian/artifacts/test_1_amd64.deb | grep ./usr/bin/mybin
          test -f debian/artifacts/test_1_amd64.buildinfo
          test -f debian/artifacts/test_1_amd64.changes

  different-artifacts-dir:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          artifacts_dir: my_artifacts
          buildpackage_opts: --build=binary --no-sign
          source_dir: test
      - run: |
          dpkg --info my_artifacts/test_1_amd64.deb
          dpkg --contents my_artifacts/test_1_amd64.deb | grep ./usr/bin/mybin
          test -f my_artifacts/test_1_amd64.buildinfo
          test -f my_artifacts/test_1_amd64.changes

  different-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          buildpackage_opts: --build=binary --no-sign
          docker_image: ubuntu:latest
          source_dir: test
      - run: |
          dpkg --info debian/artifacts/test_1_amd64.deb
          dpkg --contents debian/artifacts/test_1_amd64.deb | grep ./usr/bin/mybin
          test -f debian/artifacts/test_1_amd64.buildinfo
          test -f debian/artifacts/test_1_amd64.changes

  different-host-arch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          buildpackage_opts: --build=binary --no-sign
          host_arch: i386
          source_dir: test
      - run: |
          dpkg --info debian/artifacts/test_1_i386.deb
          dpkg --contents debian/artifacts/test_1_i386.deb | grep ./usr/bin/mybin
          test -f debian/artifacts/test_1_i386.buildinfo
          test -f debian/artifacts/test_1_i386.changes

  extra-build-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cat test/Makefile_extra_build_deps >> test/Makefile
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          buildpackage_opts: --build=binary --no-sign
          # Install an extra package unlikely to be ever installed by default:
          extra_build_deps: libzt1
          source_dir: test
      - run: |
          dpkg --info debian/artifacts/test_1_amd64.deb
          dpkg --contents debian/artifacts/test_1_amd64.deb | grep ./usr/bin/mybin
          test -f debian/artifacts/test_1_amd64.buildinfo
          test -f debian/artifacts/test_1_amd64.changes

  extra-docker-args:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cat test/Makefile_extra_docker_args >> test/Makefile
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          buildpackage_opts: --build=binary --no-sign
          source_dir: test
          extra_docker_args: --add-host extra-args-test:127.0.0.1
      - run: |
          dpkg --info debian/artifacts/test_1_amd64.deb
          dpkg --contents debian/artifacts/test_1_amd64.deb | grep ./usr/bin/mybin
          test -f debian/artifacts/test_1_amd64.buildinfo
          test -f debian/artifacts/test_1_amd64.changes

  full-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          buildpackage_opts: --build=full --no-sign
          source_dir: test
      - run: |
          dpkg --info debian/artifacts/test_1_amd64.deb
          dpkg --contents debian/artifacts/test_1_amd64.deb | grep ./usr/bin/mybin
          test -f debian/artifacts/test_1.dsc
          test -f debian/artifacts/test_1.tar.xz
          test -f debian/artifacts/test_1_amd64.buildinfo
          test -f debian/artifacts/test_1_amd64.changes

  git-as-root-in-hook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          before_build_hook: |
            cd test
            # Using `git rev-parse` here instead of github.sha to specifically
            # test the git usage.
            rev=$(git rev-parse HEAD)
            dch --maintmaint --newversion "1+$rev" "Version 1+$rev"
            dch --maintmaint --release ""
          buildpackage_opts: --build=binary --no-sign
          extra_build_deps: devscripts git
          source_dir: test
      - run: |
          dpkg --info debian/artifacts/test_1+${{ github.sha }}_amd64.deb
          dpkg --contents debian/artifacts/test_1+${{ github.sha }}_amd64.deb | grep ./usr/bin/mybin
          test -f debian/artifacts/test_1+${{ github.sha }}_amd64.buildinfo
          test -f debian/artifacts/test_1+${{ github.sha }}_amd64.changes

  local-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cat test/Makefile_local-dockerfile >> test/Makefile
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          buildpackage_opts: --build=binary --no-sign
          docker_image: test/Dockerfile
          source_dir: test
      - run: |
          dpkg --info debian/artifacts/test_1_amd64.deb
          dpkg --contents debian/artifacts/test_1_amd64.deb | grep ./usr/bin/mybin
          test -f debian/artifacts/test_1_amd64.buildinfo
          test -f debian/artifacts/test_1_amd64.changes

  multiple-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        with:
          buildpackage_opts: --build=binary --no-sign
          source_dir: test
      - run: |
          dpkg --info debian/artifacts/test_1_amd64.deb
          dpkg --info debian/artifacts/test-dbgsym_1_amd64.deb
          dpkg --contents debian/artifacts/test_1_amd64.deb | grep ./usr/bin/mybin
          dpkg --contents debian/artifacts/test-dbgsym_1_amd64.deb
          test -f debian/artifacts/test_1_amd64.buildinfo
          test -f debian/artifacts/test_1_amd64.changes

  # Regression test following issue #3 (“Did not find the .buildinfo file in
  # debian/files”)
  non-trivial-package-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          sed -i '1 s/\(1\)/4.3.2-1+final~42-5.deb+long~version/' test/debian/changelog
          sed -i 's/native/quilt/' test/debian/source/format
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          artifacts_dir: .
          buildpackage_opts: --build=binary --no-sign
          source_dir: test
      - run: |
          dpkg --info test_4.3.2-1+final~42-5.deb+long~version_amd64.deb
          dpkg --contents test_4.3.2-1+final~42-5.deb+long~version_amd64.deb | grep ./usr/bin/mybin
          test -f test_4.3.2-1+final~42-5.deb+long~version_amd64.buildinfo
          test -f test_4.3.2-1+final~42-5.deb+long~version_amd64.changes

  not-moving-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          artifacts_dir: .
          buildpackage_opts: --build=binary --no-sign
          source_dir: test
      - run: |
          dpkg --info test_1_amd64.deb
          dpkg --contents test_1_amd64.deb | grep ./usr/bin/mybin
          test -f test_1_amd64.buildinfo
          test -f test_1_amd64.changes

  single-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          buildpackage_opts: --build=binary --no-sign
          source_dir: test
      - run: |
          test "$(ls -1 debian/artifacts/*.deb | wc -l)" = 1
          dpkg --info debian/artifacts/test_1_amd64.deb
          dpkg --contents debian/artifacts/test_1_amd64.deb | grep ./usr/bin/mybin
          test -f debian/artifacts/test_1_amd64.buildinfo
          test -f debian/artifacts/test_1_amd64.changes

  source-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        with:
          buildpackage_opts: --build=source --no-sign
          source_dir: test
      - run: |
          ! ls -1 debian/artifacts/*.deb 2>/dev/null
          test -f debian/artifacts/test_1.dsc
          test -f debian/artifacts/test_1.tar.xz
          test -f debian/artifacts/test_1_source.buildinfo
          test -f debian/artifacts/test_1_source.changes
